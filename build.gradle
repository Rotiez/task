plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
	id "io.freefair.lombok" version "8.0.0-rc2"
	id 'org.liquibase.gradle' version '2.2.0'
	id 'jacoco'
}

group = 'com.vtb'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('testcontainersVersion', '1.17.6')
	set('jjwtVersion', "0.11.5")
	set('jacocoVersion', "0.8.8")
	set('springdocOpenapiUiVersion', "1.6.14")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.data:spring-data-envers'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"

	// ============ Security ============
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	implementation "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	implementation "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

	// ============ Swagger ============
	implementation "org.springdoc:springdoc-openapi-ui:${springdocOpenapiUiVersion}"

	// ============ Mapstruct ============
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

	// ============ Jacoco ============
	implementation "org.jacoco:org.jacoco.core:${jacocoVersion}"
	implementation "org.jacoco:org.jacoco.report:${jacocoVersion}"

	// ============ Liquibase ============
	implementation 'org.liquibase:liquibase-core'
}


test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}

compileJava {
	options.compilerArgs << "-Xlint:deprecation"
}

tasks.named('test') {
	useJUnitPlatform()
}
